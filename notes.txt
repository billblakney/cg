http://hsqldb.org/doc/guide/sqlroutines-chapt.html#src_returning_data
http://justinmwright.com/?p=72

create procedure atest() reads sql data dynamic result sets 1 begin atomic
declare result scroll cursor with hold with return for select * from acct;
open result; end

Tax Gain Lots < GainProvider
-----------------------------
symbol      - sellTrade
numShares   - lot
buyDate     - buyTrade
buyPrice    - buyTrade?
sellDate    - sellTrade
sellPrice   - sellTrade?
proceeds    - lot
basis       - lot
gain        - computed:lot
term        - lot?

Existing Table             <--->        New Table
All Trades (->Trades)                   Trades          # Just the trades themselves.
All Trades (->Trades)                   Trade Results   # Some variation somehow showing results, like resulting gain, etc. Could be optional columns on (1).
Shares Held (->Open Position - Summary) Open Positions  # Detail node.
Lots Held (->Open Positions - Detail)   Open Positions  # Summary node.
Tax Gains (->Gains - Summary)           Gains           # Summary node.
Tax Gain Lots (->Gains - Detail)        Gains           # Detail node.
Gains By Security                       Gains By Security # Maybe some enhancements or variation.
Gains By Year                           Gains By Year     # Maybe some enhancements or variation.

SELECT * 
FROM (SELECT date, shares FROM trade WHERE trade_id=1) AS t1,
 (SELECT ticker, price FROM trade WHERE trade_id=2);

create view x as
SELECT a.lot_id lot_id,
            a.num_shares num_shares,
            bt.date buy_date,
            bt.price buy_price,
            st.date sell_date,
            st.price sell_price
FROM lot a
inner join trade bt
 on a.buy_trade_id = bt.trade_id
inner join trade st
 on a.sell_trade_id = st.trade_id;
                 
drop view x;
create view x as
SELECT a.lot_id lot_id,
            bt.ticker symbol,
            a.num_shares num_shares,
            bt.trade_id bt_id,
            bt.date buy_date,
            bt.price buy_price,
            st.trade_id st_id,
            st.date sell_date,
            st.price sell_price
FROM lot a
inner join trade bt
 on a.buy_trade_id = bt.trade_id
inner join trade st
 on a.sell_trade_id = st.trade_id
WHERE a.state = 'Closed';
