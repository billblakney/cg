###############################################################################
Table migration
###############################################################################
Existing Table             <--->        New Table
All Trades (->Trades)                   Trades          # Just the trades themselves.
All Trades (->Trades)                   Trade Results   # Some variation somehow showing results, like resulting gain, etc. Could be optional columns on (1).
Shares Held (->Open Position - Summary) Open Positions  # Detail node.
Lots Held (->Open Positions - Detail)   Open Positions  # Summary node.
Tax Gains (->Gains - Summary)           Gains           # Summary node.
Tax Gain Lots (->Gains - Detail)        Gains           # Detail node.
Gains By Security                       Gains By Security # Maybe some enhancements or variation.
Gains By Year                           Gains By Year     # Maybe some enhancements or variation.

###############################################################################
Data classes
###############################################################################

LotRecord
- representation of db record

LotDataProvider
- interface used by reports
- relative to LotReord, contains some information from foreign key records;

LotData
- implementation of LotDataProvider
- populated with data from db view, which provides fields beyond LotRecord fields

###############################################################################
SQL and HSQLDB
###############################################################################
http://hsqldb.org/doc/guide/sqlroutines-chapt.html#src_returning_data
http://justinmwright.com/?p=72

// Example HSQLDB reads sql stored procedure returning results set.
CREATE PROCEDURE atest()
  READS SQL DATA DYNAMIC RESULT SETS 1
  BEGIN ATOMIC
    DECLARE RESULT SCROLL CURSOR WITH HOLD WITH RETURN FOR SELECT * FROM acct;
    OPEN RESULT;
  END

// Example HSQLDB modify sql stored procedure.
CREATE PROCEDURE updateLot(IN lot_id INT)
   MODIFIES SQL DATA
   BEGIN ATOMIC
     UPDATE lot SET num_shares = 5001 WHERE lot_id = 1;
   END

// Example HSQLDB modify sql stored procedure.
// Note that ALTER is not supported.
CREATE PROCEDURE clearAllTrades()
   MODIFIES SQL DATA
   BEGIN ATOMIC
     DELETE FROM lot;
     DELETE FROM trade;
   END

// maybe not so useful select example
SELECT * 
FROM (SELECT date, shares FROM trade WHERE trade_id=1) AS t1,
 (SELECT ticker, price FROM trade WHERE trade_id=2);
